# HLint configuration file
# https://github.com/ndmitchell/hlint

# Not considered useful hints
- ignore: {name: "Redundant do"}
- ignore: {name: "Use section"}
- ignore: {name: "Use camelCase"}
- ignore: {name: "Use list comprehension"}
- ignore: {name: "Redundant if"}
- ignore: {name: "Avoid lambda"}
- ignore: {name: "Eta reduce"}
- ignore: {name: "Use fmap"}  # specific for GHC 7.8 compat
- ignore: {name: "Parse error"}  # we trust the compiler over HLint
- ignore: {name: "Use =="}  # Creates infinite loops in `EQ` using expressions
- ignore: {name: "Evaluate"}
- ignore: {name: "Use &&&"}
- ignore: {name: "Redundant compare"}

# Added in hlint-2.0.10, ignoring for now
- ignore: {name: "Unnecessary hiding"}
- ignore: {name: "Use lambda-case"}

- ignore: {name: "Use fewer imports", within: [
  "System.Process.Read",  # Related to 'Hide post-AMP warnings' comment
  "Stack.Exec"  # ifdef for System.Process.Read
  ]
}

- ignore: {name: "Use fromMaybe", within: [
    "Stack.Types.Config.explicitSetupDeps"  # Related to 'explicit pattern matching is clearer' comment
  ]
}

# For clarity (related to do syntax)
- ignore: {name: "Reduce duplication", within: [
    "Network.HTTP.Download.VerifiedSpec",
    "Stack.PackageDumpSpec",
    "Stack.Types.StackT",
    "Stack.Docker"
  ]
}

# Pretty-printing
- error: {lhs: "fromString . toFilePath", rhs: "display"}
- ignore: {name: "Use display", within: "warnMultiple"}
- ignore: {name: "Use display", within: "Stack.PrettyPrint"}

- error: {lhs: "Network.HTTP.Simple.httpJSON", rhs: "Network.HTTP.StackClient.httpJSON"}
- error: {lhs: "Network.HTTP.Simple.httpLbs", rhs: "Network.HTTP.StackClient.httpLbs"}
- error: {lhs: "Network.HTTP.Simple.httpLBS", rhs: "Network.HTTP.StackClient.httpLBS"}
- error: {lhs: "Network.HTTP.Simple.httpSink", rhs: "Network.HTTP.StackClient.httpSink"}
- error: {lhs: "Network.HTTP.Simple.httpNoBody", rhs: "Network.HTTP.StackClient.httpNoBody"}
- error: {lhs: "Network.HTTP.Simple.withResponse", rhs: "Network.HTTP.StackClient.withResponse"}
- error: {lhs: "Network.HTTP.Client.withResponse", rhs: "Network.HTTP.StackClient.withResponseByManager"}
- ignore: {name: "Use alternative", within: "Network.HTTP.StackClient"}
- ignore: {name: "Use withResponseByManager", within: "Network.HTTP.StackClient"}
