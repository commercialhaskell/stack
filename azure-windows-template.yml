jobs:
- job: ${{ parameters.name }}
  timeoutInMinutes: 120
  variables:
  - group: AWS_Keys
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      stack:
        BUILD: stack
        STACK_YAML: stack.yaml
    maxParallel: 1
  steps:
  - powershell: |
      [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
      Invoke-WebRequest -Uri "https://github.com/fpco/cache-s3/releases/download/$env:CACHE_S3_VERSION/cache-s3-$env:CACHE_S3_VERSION-$env:OS_NAME-x86_64.zip" -OutFile D:\\usr\bin/cache-s3.zip
    env:
      OS_NAME: ${{ parameters.os }}
    displayName: Download binaries
  - bash: |
      export AWS_ACCESS_KEY_ID="$(AWS_ACCESS_KEY_ID)";
      export AWS_SECRET_ACCESS_KEY="$(AWS_SECRET_ACCESS_KEY)";
      export STACK_ROOT="$(Build.SourcesDirectory)"/.stack-root;
      # curl -f -L "https://github.com/fpco/cache-s3/releases/download/${CACHE_S3_VERSION}/cache-s3-${CACHE_S3_VERSION}-${OS_NAME}-x86_64.zip" -o /usr/bin/cache-s3.zip
      unzip -o /d/usr/bin/cache-s3.zip -d /usr/bin
      curl -f -L "https://mercurial-scm.org/release/windows/Mercurial-4.8-x64.exe" -o /usr/bin/hg.exe
      hg --version
      export PATH=$HOME/.local/bin:$PATH;
      cache-s3 --prefix="${CACHE_S3_PREFIX}" --git-branch="$(Build.SourceBranchName)" --suffix="${OS_NAME}" restore stack --base-branch="${BASE_BRANCH}"
      cache-s3 --prefix="${CACHE_S3_PREFIX}" --git-branch="$(Build.SourceBranchName)" --suffix="${OS_NAME}" restore stack work --base-branch="${BASE_BRANCH}"
      curl -sSkL http://www.stackage.org/stack/windows-i386 -o /usr/bin/stack.zip
      unzip -o /usr/bin/stack.zip -d /usr/bin/
      # stack setup
      # stack --no-terminal test --jobs 1
    env:
      OS_NAME: ${{ parameters.os }}

    displayName: 'Installation ${{parameters.os}}'
  - bash: |
      export AWS_ACCESS_KEY_ID="$(AWS_ACCESS_KEY_ID)";
      export AWS_SECRET_ACCESS_KEY="$(AWS_SECRET_ACCESS_KEY)";
      export STACK_ROOT="$(Build.SourcesDirectory)"/.stack-root;
      export PATH=$HOME/.local/bin:$PATH;
      if [ "$(Build.SourceBranchName)" = "${BASE_BRANCH}" ]; then
        cache-s3 --prefix="${CACHE_S3_PREFIX}" --git-branch="$(Build.SourceBranchName)" --suffix="${OS_NAME}" save stack;
      fi;
      cache-s3 --prefix="${CACHE_S3_PREFIX}" --git-branch="$(Build.SourceBranchName)" --suffix="${OS_NAME}" save stack work
    env:
      OS_NAME: ${{ parameters.os }}
    displayName: 'Cache data'
